#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcApplication1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database1")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertClient(Client instance);
    partial void UpdateClient(Client instance);
    partial void DeleteClient(Client instance);
    partial void Inserttype_servies(type_servies instance);
    partial void Updatetype_servies(type_servies instance);
    partial void Deletetype_servies(type_servies instance);
    partial void InsertPersonal(Personal instance);
    partial void UpdatePersonal(Personal instance);
    partial void DeletePersonal(Personal instance);
    partial void Inserttype_pool(type_pool instance);
    partial void Updatetype_pool(type_pool instance);
    partial void Deletetype_pool(type_pool instance);
    partial void Insertnametyperoom(nametyperoom instance);
    partial void Updatenametyperoom(nametyperoom instance);
    partial void Deletenametyperoom(nametyperoom instance);
    partial void Insertlist_number(list_number instance);
    partial void Updatelist_number(list_number instance);
    partial void Deletelist_number(list_number instance);
    partial void Insertlist_add_services(list_add_services instance);
    partial void Updatelist_add_services(list_add_services instance);
    partial void Deletelist_add_services(list_add_services instance);
    partial void Inserttype_number(type_number instance);
    partial void Updatetype_number(type_number instance);
    partial void Deletetype_number(type_number instance);
    partial void InsertOrders(Orders instance);
    partial void UpdateOrders(Orders instance);
    partial void DeleteOrders(Orders instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Database1ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Client> Client
		{
			get
			{
				return this.GetTable<Client>();
			}
		}
		
		public System.Data.Linq.Table<type_servies> type_servies
		{
			get
			{
				return this.GetTable<type_servies>();
			}
		}
		
		public System.Data.Linq.Table<Personal> Personal
		{
			get
			{
				return this.GetTable<Personal>();
			}
		}
		
		public System.Data.Linq.Table<type_pool> type_pool
		{
			get
			{
				return this.GetTable<type_pool>();
			}
		}
		
		public System.Data.Linq.Table<nametyperoom> nametyperoom
		{
			get
			{
				return this.GetTable<nametyperoom>();
			}
		}
		
		public System.Data.Linq.Table<list_number> list_number
		{
			get
			{
				return this.GetTable<list_number>();
			}
		}
		
		public System.Data.Linq.Table<list_add_services> list_add_services
		{
			get
			{
				return this.GetTable<list_add_services>();
			}
		}
		
		public System.Data.Linq.Table<type_number> type_number
		{
			get
			{
				return this.GetTable<type_number>();
			}
		}
		
		public System.Data.Linq.Table<Orders> Orders
		{
			get
			{
				return this.GetTable<Orders>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Client")]
	public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_client;
		
		private string _FIO;
		
		private System.Nullable<System.DateTime> _birthday;
		
		private string _pol;
		
		private System.Nullable<int> _identif;
		
		private string _passport;
		
		private string _address;
		
		private System.Nullable<int> _phone;
		
		private EntitySet<Orders> _Orders;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_clientChanging(int value);
    partial void OnId_clientChanged();
    partial void OnFIOChanging(string value);
    partial void OnFIOChanged();
    partial void OnbirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnbirthdayChanged();
    partial void OnpolChanging(string value);
    partial void OnpolChanged();
    partial void OnidentifChanging(System.Nullable<int> value);
    partial void OnidentifChanged();
    partial void OnpassportChanging(string value);
    partial void OnpassportChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnphoneChanging(System.Nullable<int> value);
    partial void OnphoneChanged();
    #endregion
		
		public Client()
		{
			this._Orders = new EntitySet<Orders>(new Action<Orders>(this.attach_Orders), new Action<Orders>(this.detach_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_client", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_client
		{
			get
			{
				return this._Id_client;
			}
			set
			{
				if ((this._Id_client != value))
				{
					this.OnId_clientChanging(value);
					this.SendPropertyChanging();
					this._Id_client = value;
					this.SendPropertyChanged("Id_client");
					this.OnId_clientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIO", DbType="NVarChar(150)")]
		public string FIO
		{
			get
			{
				return this._FIO;
			}
			set
			{
				if ((this._FIO != value))
				{
					this.OnFIOChanging(value);
					this.SendPropertyChanging();
					this._FIO = value;
					this.SendPropertyChanged("FIO");
					this.OnFIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="Date")]
		public System.Nullable<System.DateTime> birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this.OnbirthdayChanging(value);
					this.SendPropertyChanging();
					this._birthday = value;
					this.SendPropertyChanged("birthday");
					this.OnbirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pol", DbType="NChar(10)")]
		public string pol
		{
			get
			{
				return this._pol;
			}
			set
			{
				if ((this._pol != value))
				{
					this.OnpolChanging(value);
					this.SendPropertyChanging();
					this._pol = value;
					this.SendPropertyChanged("pol");
					this.OnpolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_identif", DbType="Int")]
		public System.Nullable<int> identif
		{
			get
			{
				return this._identif;
			}
			set
			{
				if ((this._identif != value))
				{
					this.OnidentifChanging(value);
					this.SendPropertyChanging();
					this._identif = value;
					this.SendPropertyChanged("identif");
					this.OnidentifChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passport", DbType="NChar(100)")]
		public string passport
		{
			get
			{
				return this._passport;
			}
			set
			{
				if ((this._passport != value))
				{
					this.OnpassportChanging(value);
					this.SendPropertyChanging();
					this._passport = value;
					this.SendPropertyChanged("passport");
					this.OnpassportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="Int")]
		public System.Nullable<int> phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Orders", Storage="_Orders", ThisKey="Id_client", OtherKey="id_client")]
		public EntitySet<Orders> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Orders entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_Orders(Orders entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.type_servies")]
	public partial class type_servies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_servies;
		
		private string _name;
		
		private System.Nullable<int> _tariff;
		
		private EntitySet<list_add_services> _list_add_services;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_serviesChanging(int value);
    partial void OnId_serviesChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OntariffChanging(System.Nullable<int> value);
    partial void OntariffChanged();
    #endregion
		
		public type_servies()
		{
			this._list_add_services = new EntitySet<list_add_services>(new Action<list_add_services>(this.attach_list_add_services), new Action<list_add_services>(this.detach_list_add_services));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_servies", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_servies
		{
			get
			{
				return this._Id_servies;
			}
			set
			{
				if ((this._Id_servies != value))
				{
					this.OnId_serviesChanging(value);
					this.SendPropertyChanging();
					this._Id_servies = value;
					this.SendPropertyChanged("Id_servies");
					this.OnId_serviesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tariff", DbType="Int")]
		public System.Nullable<int> tariff
		{
			get
			{
				return this._tariff;
			}
			set
			{
				if ((this._tariff != value))
				{
					this.OntariffChanging(value);
					this.SendPropertyChanging();
					this._tariff = value;
					this.SendPropertyChanged("tariff");
					this.OntariffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="type_servies_list_add_services", Storage="_list_add_services", ThisKey="Id_servies", OtherKey="id_servies")]
		public EntitySet<list_add_services> list_add_services
		{
			get
			{
				return this._list_add_services;
			}
			set
			{
				this._list_add_services.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_list_add_services(list_add_services entity)
		{
			this.SendPropertyChanging();
			entity.type_servies = this;
		}
		
		private void detach_list_add_services(list_add_services entity)
		{
			this.SendPropertyChanging();
			entity.type_servies = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Personal")]
	public partial class Personal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _FIO;
		
		private string _dolgnost;
		
		private string _login;
		
		private string _password;
		
		private System.Nullable<bool> _admin;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFIOChanging(string value);
    partial void OnFIOChanged();
    partial void OndolgnostChanging(string value);
    partial void OndolgnostChanged();
    partial void OnloginChanging(string value);
    partial void OnloginChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnadminChanging(System.Nullable<bool> value);
    partial void OnadminChanged();
    #endregion
		
		public Personal()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIO", DbType="NChar(100)")]
		public string FIO
		{
			get
			{
				return this._FIO;
			}
			set
			{
				if ((this._FIO != value))
				{
					this.OnFIOChanging(value);
					this.SendPropertyChanging();
					this._FIO = value;
					this.SendPropertyChanged("FIO");
					this.OnFIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dolgnost", DbType="NVarChar(50)")]
		public string dolgnost
		{
			get
			{
				return this._dolgnost;
			}
			set
			{
				if ((this._dolgnost != value))
				{
					this.OndolgnostChanging(value);
					this.SendPropertyChanging();
					this._dolgnost = value;
					this.SendPropertyChanged("dolgnost");
					this.OndolgnostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login", DbType="NChar(100)")]
		public string login
		{
			get
			{
				return this._login;
			}
			set
			{
				if ((this._login != value))
				{
					this.OnloginChanging(value);
					this.SendPropertyChanging();
					this._login = value;
					this.SendPropertyChanged("login");
					this.OnloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NChar(100)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin", DbType="Bit")]
		public System.Nullable<bool> admin
		{
			get
			{
				return this._admin;
			}
			set
			{
				if ((this._admin != value))
				{
					this.OnadminChanging(value);
					this.SendPropertyChanging();
					this._admin = value;
					this.SendPropertyChanged("admin");
					this.OnadminChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.type_pool")]
	public partial class type_pool : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_pool;
		
		private string _type;
		
		private System.Nullable<int> _tariff;
		
		private EntitySet<type_number> _type_number;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_poolChanging(int value);
    partial void OnId_poolChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OntariffChanging(System.Nullable<int> value);
    partial void OntariffChanged();
    #endregion
		
		public type_pool()
		{
			this._type_number = new EntitySet<type_number>(new Action<type_number>(this.attach_type_number), new Action<type_number>(this.detach_type_number));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_pool", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_pool
		{
			get
			{
				return this._Id_pool;
			}
			set
			{
				if ((this._Id_pool != value))
				{
					this.OnId_poolChanging(value);
					this.SendPropertyChanging();
					this._Id_pool = value;
					this.SendPropertyChanged("Id_pool");
					this.OnId_poolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NChar(100)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tariff", DbType="Int")]
		public System.Nullable<int> tariff
		{
			get
			{
				return this._tariff;
			}
			set
			{
				if ((this._tariff != value))
				{
					this.OntariffChanging(value);
					this.SendPropertyChanging();
					this._tariff = value;
					this.SendPropertyChanged("tariff");
					this.OntariffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="type_pool_type_number", Storage="_type_number", ThisKey="Id_pool", OtherKey="id_pool")]
		public EntitySet<type_number> type_number
		{
			get
			{
				return this._type_number;
			}
			set
			{
				this._type_number.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_type_number(type_number entity)
		{
			this.SendPropertyChanging();
			entity.type_pool = this;
		}
		
		private void detach_type_number(type_number entity)
		{
			this.SendPropertyChanging();
			entity.type_pool = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.nametyperoom")]
	public partial class nametyperoom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _name;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public nametyperoom()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.list_number")]
	public partial class list_number : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_list_number;
		
		private int _id_order;
		
		private int _id_type_room;
		
		private int _id_col_in_room;
		
		private int _id_number_room;
		
		private int _col;
		
		private System.DateTime _settlement_date;
		
		private System.DateTime _eviction_date;
		
		private int _price;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_list_numberChanging(int value);
    partial void OnId_list_numberChanged();
    partial void Onid_orderChanging(int value);
    partial void Onid_orderChanged();
    partial void Onid_type_roomChanging(int value);
    partial void Onid_type_roomChanged();
    partial void Onid_col_in_roomChanging(int value);
    partial void Onid_col_in_roomChanged();
    partial void Onid_number_roomChanging(int value);
    partial void Onid_number_roomChanged();
    partial void OncolChanging(int value);
    partial void OncolChanged();
    partial void Onsettlement_dateChanging(System.DateTime value);
    partial void Onsettlement_dateChanged();
    partial void Oneviction_dateChanging(System.DateTime value);
    partial void Oneviction_dateChanged();
    partial void OnpriceChanging(int value);
    partial void OnpriceChanged();
    #endregion
		
		public list_number()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_list_number", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_list_number
		{
			get
			{
				return this._Id_list_number;
			}
			set
			{
				if ((this._Id_list_number != value))
				{
					this.OnId_list_numberChanging(value);
					this.SendPropertyChanging();
					this._Id_list_number = value;
					this.SendPropertyChanged("Id_list_number");
					this.OnId_list_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_order", DbType="Int NOT NULL")]
		public int id_order
		{
			get
			{
				return this._id_order;
			}
			set
			{
				if ((this._id_order != value))
				{
					this.Onid_orderChanging(value);
					this.SendPropertyChanging();
					this._id_order = value;
					this.SendPropertyChanged("id_order");
					this.Onid_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_type_room", DbType="Int NOT NULL")]
		public int id_type_room
		{
			get
			{
				return this._id_type_room;
			}
			set
			{
				if ((this._id_type_room != value))
				{
					this.Onid_type_roomChanging(value);
					this.SendPropertyChanging();
					this._id_type_room = value;
					this.SendPropertyChanged("id_type_room");
					this.Onid_type_roomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_col_in_room", DbType="Int NOT NULL")]
		public int id_col_in_room
		{
			get
			{
				return this._id_col_in_room;
			}
			set
			{
				if ((this._id_col_in_room != value))
				{
					this.Onid_col_in_roomChanging(value);
					this.SendPropertyChanging();
					this._id_col_in_room = value;
					this.SendPropertyChanged("id_col_in_room");
					this.Onid_col_in_roomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_number_room", DbType="Int NOT NULL")]
		public int id_number_room
		{
			get
			{
				return this._id_number_room;
			}
			set
			{
				if ((this._id_number_room != value))
				{
					this.Onid_number_roomChanging(value);
					this.SendPropertyChanging();
					this._id_number_room = value;
					this.SendPropertyChanged("id_number_room");
					this.Onid_number_roomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_col", DbType="Int NOT NULL")]
		public int col
		{
			get
			{
				return this._col;
			}
			set
			{
				if ((this._col != value))
				{
					this.OncolChanging(value);
					this.SendPropertyChanging();
					this._col = value;
					this.SendPropertyChanged("col");
					this.OncolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_settlement_date", DbType="DateTime NOT NULL")]
		public System.DateTime settlement_date
		{
			get
			{
				return this._settlement_date;
			}
			set
			{
				if ((this._settlement_date != value))
				{
					this.Onsettlement_dateChanging(value);
					this.SendPropertyChanging();
					this._settlement_date = value;
					this.SendPropertyChanged("settlement_date");
					this.Onsettlement_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eviction_date", DbType="DateTime NOT NULL")]
		public System.DateTime eviction_date
		{
			get
			{
				return this._eviction_date;
			}
			set
			{
				if ((this._eviction_date != value))
				{
					this.Oneviction_dateChanging(value);
					this.SendPropertyChanging();
					this._eviction_date = value;
					this.SendPropertyChanged("eviction_date");
					this.Oneviction_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int NOT NULL")]
		public int price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.list_add_services")]
	public partial class list_add_services : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_list_add_services;
		
		private System.Nullable<int> _id_order;
		
		private System.Nullable<int> _id_servies;
		
		private System.Nullable<System.DateTime> _DateUse;
		
		private System.Nullable<int> _col;
		
		private System.Nullable<int> _price;
		
		private EntityRef<type_servies> _type_servies;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_list_add_servicesChanging(int value);
    partial void OnId_list_add_servicesChanged();
    partial void Onid_orderChanging(System.Nullable<int> value);
    partial void Onid_orderChanged();
    partial void Onid_serviesChanging(System.Nullable<int> value);
    partial void Onid_serviesChanged();
    partial void OnDateUseChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUseChanged();
    partial void OncolChanging(System.Nullable<int> value);
    partial void OncolChanged();
    partial void OnpriceChanging(System.Nullable<int> value);
    partial void OnpriceChanged();
    #endregion
		
		public list_add_services()
		{
			this._type_servies = default(EntityRef<type_servies>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_list_add_services", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_list_add_services
		{
			get
			{
				return this._Id_list_add_services;
			}
			set
			{
				if ((this._Id_list_add_services != value))
				{
					this.OnId_list_add_servicesChanging(value);
					this.SendPropertyChanging();
					this._Id_list_add_services = value;
					this.SendPropertyChanged("Id_list_add_services");
					this.OnId_list_add_servicesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_order", DbType="Int")]
		public System.Nullable<int> id_order
		{
			get
			{
				return this._id_order;
			}
			set
			{
				if ((this._id_order != value))
				{
					this.Onid_orderChanging(value);
					this.SendPropertyChanging();
					this._id_order = value;
					this.SendPropertyChanged("id_order");
					this.Onid_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_servies", DbType="Int")]
		public System.Nullable<int> id_servies
		{
			get
			{
				return this._id_servies;
			}
			set
			{
				if ((this._id_servies != value))
				{
					if (this._type_servies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_serviesChanging(value);
					this.SendPropertyChanging();
					this._id_servies = value;
					this.SendPropertyChanged("id_servies");
					this.Onid_serviesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUse", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUse
		{
			get
			{
				return this._DateUse;
			}
			set
			{
				if ((this._DateUse != value))
				{
					this.OnDateUseChanging(value);
					this.SendPropertyChanging();
					this._DateUse = value;
					this.SendPropertyChanged("DateUse");
					this.OnDateUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_col", DbType="Int")]
		public System.Nullable<int> col
		{
			get
			{
				return this._col;
			}
			set
			{
				if ((this._col != value))
				{
					this.OncolChanging(value);
					this.SendPropertyChanging();
					this._col = value;
					this.SendPropertyChanged("col");
					this.OncolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int")]
		public System.Nullable<int> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="type_servies_list_add_services", Storage="_type_servies", ThisKey="id_servies", OtherKey="Id_servies", IsForeignKey=true)]
		public type_servies type_servies
		{
			get
			{
				return this._type_servies.Entity;
			}
			set
			{
				type_servies previousValue = this._type_servies.Entity;
				if (((previousValue != value) 
							|| (this._type_servies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._type_servies.Entity = null;
						previousValue.list_add_services.Remove(this);
					}
					this._type_servies.Entity = value;
					if ((value != null))
					{
						value.list_add_services.Add(this);
						this._id_servies = value.Id_servies;
					}
					else
					{
						this._id_servies = default(Nullable<int>);
					}
					this.SendPropertyChanged("type_servies");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.type_number")]
	public partial class type_number : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_number;
		
		private string _name;
		
		private System.Nullable<int> _col;
		
		private System.Nullable<int> _id_pool;
		
		private bool _Free;
		
		private EntitySet<Orders> _Orders;
		
		private EntityRef<type_pool> _type_pool;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_numberChanging(int value);
    partial void OnId_numberChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncolChanging(System.Nullable<int> value);
    partial void OncolChanged();
    partial void Onid_poolChanging(System.Nullable<int> value);
    partial void Onid_poolChanged();
    partial void OnFreeChanging(bool value);
    partial void OnFreeChanged();
    #endregion
		
		public type_number()
		{
			this._Orders = new EntitySet<Orders>(new Action<Orders>(this.attach_Orders), new Action<Orders>(this.detach_Orders));
			this._type_pool = default(EntityRef<type_pool>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_number", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_number
		{
			get
			{
				return this._Id_number;
			}
			set
			{
				if ((this._Id_number != value))
				{
					this.OnId_numberChanging(value);
					this.SendPropertyChanging();
					this._Id_number = value;
					this.SendPropertyChanged("Id_number");
					this.OnId_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_col", DbType="Int")]
		public System.Nullable<int> col
		{
			get
			{
				return this._col;
			}
			set
			{
				if ((this._col != value))
				{
					this.OncolChanging(value);
					this.SendPropertyChanging();
					this._col = value;
					this.SendPropertyChanged("col");
					this.OncolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pool", DbType="Int")]
		public System.Nullable<int> id_pool
		{
			get
			{
				return this._id_pool;
			}
			set
			{
				if ((this._id_pool != value))
				{
					if (this._type_pool.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_poolChanging(value);
					this.SendPropertyChanging();
					this._id_pool = value;
					this.SendPropertyChanged("id_pool");
					this.Onid_poolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Free", DbType="Bit NOT NULL")]
		public bool Free
		{
			get
			{
				return this._Free;
			}
			set
			{
				if ((this._Free != value))
				{
					this.OnFreeChanging(value);
					this.SendPropertyChanging();
					this._Free = value;
					this.SendPropertyChanged("Free");
					this.OnFreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="type_number_Orders", Storage="_Orders", ThisKey="Id_number", OtherKey="id_number")]
		public EntitySet<Orders> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="type_pool_type_number", Storage="_type_pool", ThisKey="id_pool", OtherKey="Id_pool", IsForeignKey=true)]
		public type_pool type_pool
		{
			get
			{
				return this._type_pool.Entity;
			}
			set
			{
				type_pool previousValue = this._type_pool.Entity;
				if (((previousValue != value) 
							|| (this._type_pool.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._type_pool.Entity = null;
						previousValue.type_number.Remove(this);
					}
					this._type_pool.Entity = value;
					if ((value != null))
					{
						value.type_number.Add(this);
						this._id_pool = value.Id_pool;
					}
					else
					{
						this._id_pool = default(Nullable<int>);
					}
					this.SendPropertyChanged("type_pool");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Orders entity)
		{
			this.SendPropertyChanging();
			entity.type_number = this;
		}
		
		private void detach_Orders(Orders entity)
		{
			this.SendPropertyChanging();
			entity.type_number = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
	public partial class Orders : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_order;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<System.DateTime> _begin;
		
		private System.Nullable<System.DateTime> _end;
		
		private System.Nullable<bool> _payment;
		
		private System.Nullable<int> _id_client;
		
		private System.Nullable<int> _id_number;
		
		private System.Nullable<int> _BigPrice;
		
		private System.Nullable<bool> _Done;
		
		private System.Nullable<bool> _Hide;
		
		private EntityRef<Client> _Client;
		
		private EntityRef<type_number> _type_number;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_orderChanging(int value);
    partial void OnId_orderChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnbeginChanging(System.Nullable<System.DateTime> value);
    partial void OnbeginChanged();
    partial void OnendChanging(System.Nullable<System.DateTime> value);
    partial void OnendChanged();
    partial void OnpaymentChanging(System.Nullable<bool> value);
    partial void OnpaymentChanged();
    partial void Onid_clientChanging(System.Nullable<int> value);
    partial void Onid_clientChanged();
    partial void Onid_numberChanging(System.Nullable<int> value);
    partial void Onid_numberChanged();
    partial void OnBigPriceChanging(System.Nullable<int> value);
    partial void OnBigPriceChanged();
    partial void OnDoneChanging(System.Nullable<bool> value);
    partial void OnDoneChanged();
    partial void OnHideChanging(System.Nullable<bool> value);
    partial void OnHideChanged();
    #endregion
		
		public Orders()
		{
			this._Client = default(EntityRef<Client>);
			this._type_number = default(EntityRef<type_number>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_order", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_order
		{
			get
			{
				return this._Id_order;
			}
			set
			{
				if ((this._Id_order != value))
				{
					this.OnId_orderChanging(value);
					this.SendPropertyChanging();
					this._Id_order = value;
					this.SendPropertyChanged("Id_order");
					this.OnId_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[begin]", Storage="_begin", DbType="DateTime")]
		public System.Nullable<System.DateTime> begin
		{
			get
			{
				return this._begin;
			}
			set
			{
				if ((this._begin != value))
				{
					this.OnbeginChanging(value);
					this.SendPropertyChanging();
					this._begin = value;
					this.SendPropertyChanged("begin");
					this.OnbeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[end]", Storage="_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> end
		{
			get
			{
				return this._end;
			}
			set
			{
				if ((this._end != value))
				{
					this.OnendChanging(value);
					this.SendPropertyChanging();
					this._end = value;
					this.SendPropertyChanged("end");
					this.OnendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment", DbType="Bit")]
		public System.Nullable<bool> payment
		{
			get
			{
				return this._payment;
			}
			set
			{
				if ((this._payment != value))
				{
					this.OnpaymentChanging(value);
					this.SendPropertyChanging();
					this._payment = value;
					this.SendPropertyChanged("payment");
					this.OnpaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_client", DbType="Int")]
		public System.Nullable<int> id_client
		{
			get
			{
				return this._id_client;
			}
			set
			{
				if ((this._id_client != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_clientChanging(value);
					this.SendPropertyChanging();
					this._id_client = value;
					this.SendPropertyChanged("id_client");
					this.Onid_clientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_number", DbType="Int")]
		public System.Nullable<int> id_number
		{
			get
			{
				return this._id_number;
			}
			set
			{
				if ((this._id_number != value))
				{
					if (this._type_number.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_numberChanging(value);
					this.SendPropertyChanging();
					this._id_number = value;
					this.SendPropertyChanged("id_number");
					this.Onid_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BigPrice", DbType="Int")]
		public System.Nullable<int> BigPrice
		{
			get
			{
				return this._BigPrice;
			}
			set
			{
				if ((this._BigPrice != value))
				{
					this.OnBigPriceChanging(value);
					this.SendPropertyChanging();
					this._BigPrice = value;
					this.SendPropertyChanged("BigPrice");
					this.OnBigPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Done", DbType="Bit")]
		public System.Nullable<bool> Done
		{
			get
			{
				return this._Done;
			}
			set
			{
				if ((this._Done != value))
				{
					this.OnDoneChanging(value);
					this.SendPropertyChanging();
					this._Done = value;
					this.SendPropertyChanged("Done");
					this.OnDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hide", DbType="Bit")]
		public System.Nullable<bool> Hide
		{
			get
			{
				return this._Hide;
			}
			set
			{
				if ((this._Hide != value))
				{
					this.OnHideChanging(value);
					this.SendPropertyChanging();
					this._Hide = value;
					this.SendPropertyChanged("Hide");
					this.OnHideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Orders", Storage="_Client", ThisKey="id_client", OtherKey="Id_client", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._id_client = value.Id_client;
					}
					else
					{
						this._id_client = default(Nullable<int>);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="type_number_Orders", Storage="_type_number", ThisKey="id_number", OtherKey="Id_number", IsForeignKey=true)]
		public type_number type_number
		{
			get
			{
				return this._type_number.Entity;
			}
			set
			{
				type_number previousValue = this._type_number.Entity;
				if (((previousValue != value) 
							|| (this._type_number.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._type_number.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._type_number.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._id_number = value.Id_number;
					}
					else
					{
						this._id_number = default(Nullable<int>);
					}
					this.SendPropertyChanged("type_number");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
